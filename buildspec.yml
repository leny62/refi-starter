version: 0.2

phases:
  pre_build:
    commands:
      - export IMAGE_VERSION=v1.0.0-$CODEBUILD_BUILD_NUMBER
      - export FULL_SERVICE_NAME=$SERVICE_NAME-$SERVICE_ENV
      - export TASK_TAG=$FULL_SERVICE_NAME:$IMAGE_VERSION
      - export TASK_TAG_LATEST=$FULL_SERVICE_NAME:latest
      - export ECR_HOST=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - export ECR_VERSION_URI=$ECR_HOST/$TASK_TAG
      - export ECR_LATEST_URI=$ECR_HOST/$TASK_TAG_LATEST
  build:
    commands:
      - echo Build started on `date`
      - env=$BUILD_TARGET_ENV make clean build
      - echo Building the Docker image $TASK_TAG...
      - docker build --no-cache -t $TASK_TAG -f conf/$SERVICE_ENV/Dockerfile .
      - echo Tagging image for Amazon ECR $AWS_REGION...
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - echo Tagging $ECR_VERSION_URI
      - docker tag $TASK_TAG $ECR_VERSION_URI
      - docker push $ECR_VERSION_URI
      - echo Tagging $ECR_LATEST_URI
      - docker tag $TASK_TAG $ECR_LATEST_URI
      - docker push $ECR_LATEST_URI
      - printf '[{"name":"%s","imageUri":"%s"}]' $SERVICE_NAME $ECR_VERSION_URI > imagedefinitions.json
      - echo Build completed on `date`

artifacts:
  files:
    - imagedefinitions.json
